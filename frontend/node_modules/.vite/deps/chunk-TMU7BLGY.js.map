{
  "version": 3,
  "sources": ["../../@chakra-ui/react-context/dist/index.mjs"],
  "sourcesContent": ["// src/index.ts\nimport {\n  createContext as createReactContext,\n  useContext as useReactContext\n} from \"react\";\nfunction getErrorMessage(hook, provider) {\n  return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`;\n}\nfunction createContext(options = {}) {\n  const {\n    name,\n    strict = true,\n    hookName = \"useContext\",\n    providerName = \"Provider\",\n    errorMessage,\n    defaultValue\n  } = options;\n  const Context = createReactContext(defaultValue);\n  Context.displayName = name;\n  function useContext() {\n    var _a;\n    const context = useReactContext(Context);\n    if (!context && strict) {\n      const error = new Error(\n        errorMessage != null ? errorMessage : getErrorMessage(hookName, providerName)\n      );\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext);\n      throw error;\n    }\n    return context;\n  }\n  return [Context.Provider, useContext, Context];\n}\nexport {\n  createContext\n};\n"],
  "mappings": ";;;;;;;;AACA,mBAGO;AACP,SAAS,gBAAgB,MAAM,UAAU;AACvC,SAAO,GAAG,IAAI,sEAAsE,QAAQ;AAC9F;AACA,SAAS,cAAc,UAAU,CAAC,GAAG;AACnC,QAAM;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,IACT,WAAW;AAAA,IACX,eAAe;AAAA,IACf;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,cAAU,aAAAA,eAAmB,YAAY;AAC/C,UAAQ,cAAc;AACtB,WAAS,aAAa;AACpB,QAAI;AACJ,UAAM,cAAU,aAAAC,YAAgB,OAAO;AACvC,QAAI,CAAC,WAAW,QAAQ;AACtB,YAAM,QAAQ,IAAI;AAAA,QAChB,gBAAgB,OAAO,eAAe,gBAAgB,UAAU,YAAY;AAAA,MAC9E;AACA,YAAM,OAAO;AACb,OAAC,KAAK,MAAM,sBAAsB,OAAO,SAAS,GAAG,KAAK,OAAO,OAAO,UAAU;AAClF,YAAM;AAAA,IACR;AACA,WAAO;AAAA,EACT;AACA,SAAO,CAAC,QAAQ,UAAU,YAAY,OAAO;AAC/C;",
  "names": ["createReactContext", "useReactContext"]
}
