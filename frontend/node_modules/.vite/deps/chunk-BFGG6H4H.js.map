{
  "version": 3,
  "sources": ["../../@chakra-ui/avatar/dist/chunk-QVBG3QXJ.mjs", "../../@chakra-ui/avatar/dist/chunk-2RQKHYD2.mjs", "../../@chakra-ui/avatar/dist/chunk-UQKBGXXQ.mjs", "../../@chakra-ui/avatar/dist/chunk-ZXZNYCCD.mjs", "../../@chakra-ui/avatar/dist/chunk-F3YZVIUT.mjs", "../../@chakra-ui/avatar/dist/chunk-DXGPTSUR.mjs", "../../@chakra-ui/avatar/dist/chunk-E2NJL723.mjs"],
  "sourcesContent": ["// src/avatar-context.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [AvatarStylesProvider, useAvatarStyles] = createContext({\n  name: `AvatarStylesContext`,\n  hookName: `useAvatarStyles`,\n  providerName: \"<Avatar/>\"\n});\n\nexport {\n  AvatarStylesProvider,\n  useAvatarStyles\n};\n", "import {\n  useAvatarStyles\n} from \"./chunk-QVBG3QXJ.mjs\";\n\n// src/avatar-badge.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar placementMap = {\n  \"top-start\": {\n    top: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, -25%)\"\n  },\n  \"top-end\": {\n    top: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, -25%)\"\n  },\n  \"bottom-start\": {\n    bottom: \"0\",\n    insetStart: \"0\",\n    transform: \"translate(-25%, 25%)\"\n  },\n  \"bottom-end\": {\n    bottom: \"0\",\n    insetEnd: \"0\",\n    transform: \"translate(25%, 25%)\"\n  }\n};\nvar AvatarBadge = forwardRef(\n  function AvatarBadge2(props, ref) {\n    const { placement = \"bottom-end\", className, ...rest } = props;\n    const styles = useAvatarStyles();\n    const placementStyles = placementMap[placement];\n    const badgeStyles = {\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      ...placementStyles,\n      ...styles.badge\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        ...rest,\n        className: cx(\"chakra-avatar__badge\", className),\n        __css: badgeStyles\n      }\n    );\n  }\n);\nAvatarBadge.displayName = \"AvatarBadge\";\n\nexport {\n  AvatarBadge\n};\n", "import {\n  useAvatarStyles\n} from \"./chunk-QVBG3QXJ.mjs\";\n\n// src/avatar-name.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction initials(name) {\n  var _a;\n  const names = name.split(\" \");\n  const firstName = (_a = names[0]) != null ? _a : \"\";\n  const lastName = names.length > 1 ? names[names.length - 1] : \"\";\n  return firstName && lastName ? `${firstName.charAt(0)}${lastName.charAt(0)}` : firstName.charAt(0);\n}\nfunction AvatarName(props) {\n  const { name, getInitials, ...rest } = props;\n  const styles = useAvatarStyles();\n  return /* @__PURE__ */ jsx(chakra.div, { role: \"img\", \"aria-label\": name, ...rest, __css: styles.label, children: name ? getInitials == null ? void 0 : getInitials(name) : null });\n}\nAvatarName.displayName = \"AvatarName\";\n\nexport {\n  initials,\n  AvatarName\n};\n", "// src/generic-avatar-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar GenericAvatarIcon = (props) => /* @__PURE__ */ jsxs(\n  chakra.svg,\n  {\n    viewBox: \"0 0 128 128\",\n    color: \"#fff\",\n    width: \"100%\",\n    height: \"100%\",\n    className: \"chakra-avatar__svg\",\n    ...props,\n    children: [\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z\"\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24\"\n        }\n      )\n    ]\n  }\n);\n\nexport {\n  GenericAvatarIcon\n};\n", "import {\n  AvatarName\n} from \"./chunk-UQKBGXXQ.mjs\";\nimport {\n  GenericAvatarIcon\n} from \"./chunk-ZXZNYCCD.mjs\";\n\n// src/avatar-image.tsx\nimport { useImage } from \"@chakra-ui/image\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction AvatarImage(props) {\n  const {\n    src,\n    srcSet,\n    onError,\n    onLoad,\n    getInitials,\n    name,\n    borderRadius,\n    loading,\n    iconLabel,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    ignoreFallback,\n    referrerPolicy,\n    crossOrigin\n  } = props;\n  const status = useImage({ src, onError, crossOrigin, ignoreFallback });\n  const hasLoaded = status === \"loaded\";\n  const showFallback = !src || !hasLoaded;\n  if (showFallback) {\n    return name ? /* @__PURE__ */ jsx(\n      AvatarName,\n      {\n        className: \"chakra-avatar__initials\",\n        getInitials,\n        name\n      }\n    ) : cloneElement(icon, {\n      role: \"img\",\n      \"aria-label\": iconLabel\n    });\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      src,\n      srcSet,\n      alt: name,\n      onLoad,\n      referrerPolicy,\n      crossOrigin: crossOrigin != null ? crossOrigin : void 0,\n      className: \"chakra-avatar__img\",\n      loading,\n      __css: {\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"cover\",\n        borderRadius\n      }\n    }\n  );\n}\nAvatarImage.displayName = \"AvatarImage\";\n\nexport {\n  AvatarImage\n};\n", "import {\n  AvatarImage\n} from \"./chunk-F3YZVIUT.mjs\";\nimport {\n  initials\n} from \"./chunk-UQKBGXXQ.mjs\";\nimport {\n  AvatarStylesProvider\n} from \"./chunk-QVBG3QXJ.mjs\";\nimport {\n  GenericAvatarIcon\n} from \"./chunk-ZXZNYCCD.mjs\";\n\n// src/avatar.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { callAllHandlers, cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useState } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar baseStyle = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  textTransform: \"uppercase\",\n  fontWeight: \"medium\",\n  position: \"relative\",\n  flexShrink: 0\n};\nvar Avatar = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Avatar\", props);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const {\n    src,\n    srcSet,\n    name,\n    showBorder,\n    borderRadius = \"full\",\n    onError,\n    onLoad: onLoadProp,\n    getInitials = initials,\n    icon = /* @__PURE__ */ jsx(GenericAvatarIcon, {}),\n    iconLabel = \" avatar\",\n    loading,\n    children,\n    borderColor,\n    ignoreFallback,\n    crossOrigin,\n    ...rest\n  } = omitThemingProps(props);\n  const avatarStyles = {\n    borderRadius,\n    borderWidth: showBorder ? \"2px\" : void 0,\n    ...baseStyle,\n    ...styles.container\n  };\n  if (borderColor) {\n    avatarStyles.borderColor = borderColor;\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      ref,\n      ...rest,\n      className: cx(\"chakra-avatar\", props.className),\n      \"data-loaded\": dataAttr(isLoaded),\n      __css: avatarStyles,\n      children: /* @__PURE__ */ jsxs(AvatarStylesProvider, { value: styles, children: [\n        /* @__PURE__ */ jsx(\n          AvatarImage,\n          {\n            src,\n            srcSet,\n            loading,\n            onLoad: callAllHandlers(onLoadProp, () => {\n              setIsLoaded(true);\n            }),\n            onError,\n            getInitials,\n            name,\n            borderRadius,\n            icon,\n            iconLabel,\n            ignoreFallback,\n            crossOrigin\n          }\n        ),\n        children\n      ] })\n    }\n  );\n});\nAvatar.displayName = \"Avatar\";\n\nexport {\n  baseStyle,\n  Avatar\n};\n", "import {\n  baseStyle\n} from \"./chunk-DXGPTSUR.mjs\";\n\n// src/avatar-group.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\n\n// ../../utilities/object-utils/src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/avatar-group.tsx\nimport { cloneElement } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar AvatarGroup = forwardRef(\n  function AvatarGroup2(props, ref) {\n    const styles = useMultiStyleConfig(\"Avatar\", props);\n    const {\n      children,\n      borderColor,\n      max,\n      spacing = \"-0.75rem\",\n      borderRadius = \"full\",\n      ...rest\n    } = omitThemingProps(props);\n    const validChildren = getValidChildren(children);\n    const childrenWithinMax = max != null ? validChildren.slice(0, max) : validChildren;\n    const excess = max != null ? validChildren.length - max : 0;\n    const reversedChildren = childrenWithinMax.reverse();\n    const clones = reversedChildren.map((child, index) => {\n      var _a;\n      const isFirstAvatar = index === 0;\n      const childProps = {\n        marginEnd: isFirstAvatar ? 0 : spacing,\n        size: props.size,\n        borderColor: (_a = child.props.borderColor) != null ? _a : borderColor,\n        showBorder: true\n      };\n      return cloneElement(child, compact(childProps));\n    });\n    const groupStyles = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      flexDirection: \"row-reverse\",\n      ...styles.group\n    };\n    const excessStyles = {\n      borderRadius,\n      marginStart: spacing,\n      ...baseStyle,\n      ...styles.excessLabel\n    };\n    return /* @__PURE__ */ jsxs(\n      chakra.div,\n      {\n        ref,\n        role: \"group\",\n        __css: groupStyles,\n        ...rest,\n        className: cx(\"chakra-avatar__group\", props.className),\n        children: [\n          excess > 0 && /* @__PURE__ */ jsx(chakra.span, { className: \"chakra-avatar__excess\", __css: excessStyles, children: `+${excess}` }),\n          clones\n        ]\n      }\n    );\n  }\n);\nAvatarGroup.displayName = \"AvatarGroup\";\n\nexport {\n  AvatarGroup\n};\n"],
  "mappings": "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",
  "names": ["import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime"]
}
